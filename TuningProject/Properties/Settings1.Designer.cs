//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TuningHostProject.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int BestDarknessPercentageThreshold {
            get {
                return ((int)(this["BestDarknessPercentageThreshold"]));
            }
            set {
                this["BestDarknessPercentageThreshold"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public float BestSecondsSkipThreshold {
            get {
                return ((float)(this["BestSecondsSkipThreshold"]));
            }
            set {
                this["BestSecondsSkipThreshold"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int BestIndividualPixelBrightnessThreshold {
            get {
                return ((int)(this["BestIndividualPixelBrightnessThreshold"]));
            }
            set {
                this["BestIndividualPixelBrightnessThreshold"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int BestActualScore {
            get {
                return ((int)(this["BestActualScore"]));
            }
            set {
                this["BestActualScore"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public float CurrentThresholdSecondsSkip {
            get {
                return ((float)(this["CurrentThresholdSecondsSkip"]));
            }
            set {
                this["CurrentThresholdSecondsSkip"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int CurrentThresholdIndividualPixelBrightness {
            get {
                return ((int)(this["CurrentThresholdIndividualPixelBrightness"]));
            }
            set {
                this["CurrentThresholdIndividualPixelBrightness"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int CurrentThresholdDarkPixelsPerFrameAsPercentage {
            get {
                return ((int)(this["CurrentThresholdDarkPixelsPerFrameAsPercentage"]));
            }
            set {
                this["CurrentThresholdDarkPixelsPerFrameAsPercentage"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int CompletedPassesCount {
            get {
                return ((int)(this["CompletedPassesCount"]));
            }
            set {
                this["CompletedPassesCount"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string TuningResultsDirectory {
            get {
                return ((string)(this["TuningResultsDirectory"]));
            }
            set {
                this["TuningResultsDirectory"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0.2")]
        public float ThresholdSecondsSkipStart {
            get {
                return ((float)(this["ThresholdSecondsSkipStart"]));
            }
            set {
                this["ThresholdSecondsSkipStart"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0.3")]
        public float ThresholdSecondsSkipEnd {
            get {
                return ((float)(this["ThresholdSecondsSkipEnd"]));
            }
            set {
                this["ThresholdSecondsSkipEnd"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0.05")]
        public float ThresholdSecondsSkipIncrement {
            get {
                return ((float)(this["ThresholdSecondsSkipIncrement"]));
            }
            set {
                this["ThresholdSecondsSkipIncrement"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("66")]
        public int ThresholdIndividualPixelBrightnessStart {
            get {
                return ((int)(this["ThresholdIndividualPixelBrightnessStart"]));
            }
            set {
                this["ThresholdIndividualPixelBrightnessStart"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("76")]
        public int ThresholdIndividualPixelBrightnessEnd {
            get {
                return ((int)(this["ThresholdIndividualPixelBrightnessEnd"]));
            }
            set {
                this["ThresholdIndividualPixelBrightnessEnd"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int ThresholdIndividualPixelBrightnessIncrement {
            get {
                return ((int)(this["ThresholdIndividualPixelBrightnessIncrement"]));
            }
            set {
                this["ThresholdIndividualPixelBrightnessIncrement"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("85")]
        public int ThresholdDarkPixelsPerFrameAsPercentageStart {
            get {
                return ((int)(this["ThresholdDarkPixelsPerFrameAsPercentageStart"]));
            }
            set {
                this["ThresholdDarkPixelsPerFrameAsPercentageStart"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("95")]
        public int ThresholdDarkPixelsPerFrameAsPercentageEnd {
            get {
                return ((int)(this["ThresholdDarkPixelsPerFrameAsPercentageEnd"]));
            }
            set {
                this["ThresholdDarkPixelsPerFrameAsPercentageEnd"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int ThresholdDarkPixelsPerFrameAsPercentageIncrement {
            get {
                return ((int)(this["ThresholdDarkPixelsPerFrameAsPercentageIncrement"]));
            }
            set {
                this["ThresholdDarkPixelsPerFrameAsPercentageIncrement"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public int ThresholdPixelScanPercentageStart {
            get {
                return ((int)(this["ThresholdPixelScanPercentageStart"]));
            }
            set {
                this["ThresholdPixelScanPercentageStart"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("70")]
        public int ThresholdPixelScanPercentageEnd {
            get {
                return ((int)(this["ThresholdPixelScanPercentageEnd"]));
            }
            set {
                this["ThresholdPixelScanPercentageEnd"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public int ThresholdPixelScanPercentageIncrement {
            get {
                return ((int)(this["ThresholdPixelScanPercentageIncrement"]));
            }
            set {
                this["ThresholdPixelScanPercentageIncrement"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int CurrentThresholdPixelScanPercentage {
            get {
                return ((int)(this["CurrentThresholdPixelScanPercentage"]));
            }
            set {
                this["CurrentThresholdPixelScanPercentage"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int BestPixelScanPercentageThreshold {
            get {
                return ((int)(this["BestPixelScanPercentageThreshold"]));
            }
            set {
                this["BestPixelScanPercentageThreshold"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public float CurrentThresholdConsecutiveDarkFramesInSeconds {
            get {
                return ((float)(this["CurrentThresholdConsecutiveDarkFramesInSeconds"]));
            }
            set {
                this["CurrentThresholdConsecutiveDarkFramesInSeconds"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0.3")]
        public float ThresholdConsecutiveDarkFramesInSecondsStart {
            get {
                return ((float)(this["ThresholdConsecutiveDarkFramesInSecondsStart"]));
            }
            set {
                this["ThresholdConsecutiveDarkFramesInSecondsStart"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1.2")]
        public float ThresholdConsecutiveDarkFramesInSecondsEnd {
            get {
                return ((float)(this["ThresholdConsecutiveDarkFramesInSecondsEnd"]));
            }
            set {
                this["ThresholdConsecutiveDarkFramesInSecondsEnd"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0.3")]
        public float ThresholdConsecutiveDarkFramesInSecondsIncrement {
            get {
                return ((float)(this["ThresholdConsecutiveDarkFramesInSecondsIncrement"]));
            }
            set {
                this["ThresholdConsecutiveDarkFramesInSecondsIncrement"] = value;
            }
        }
    }
}
