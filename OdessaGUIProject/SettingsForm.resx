<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="saveAsProRes.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADMAAAAVCAIAAABkNkFWAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADZmlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw
        ZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1w
        TU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjAyODAxMTc0MDcyMDY4MTE5MkIwRTQwNzVDQTk5
        MzIxIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjUwQkZFRTk1QjFBMTExRTFCRUFGQzM3QTMyNEM5
        Q0Y3IiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjUwQkZFRTk0QjFBMTExRTFCRUFGQzM3QTMyNEM5
        Q0Y3IiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUgTWFjaW50b3NoIj4gPHhtcE1N
        OkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6MDE4MDExNzQwNzIwNjgxMTg4QzZG
        NTBGMjRDOUVCMEIiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6MDI4MDExNzQwNzIwNjgxMTkyQjBF
        NDA3NUNBOTkzMjEiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/
        eHBhY2tldCBlbmQ9InIiPz61aDcsAAADHklEQVRIS62Wv24aQRDG7zkSwn+MARNkwEa2iSxDMAkBoigY
        JAQFQkaioojEC9AaUVJDatPimpqHyu8Y2KyOQMTpvgJmZ2d3v53ZmRvj4w7xeBzx/Pzc4/Hc3NzU6/Vu
        t/trAwSGKJlyuVzvnYPb7fb5fOFwmNMvLi4ggCCyocYIoVAoGo222+1er9dqtRqNxo8NEBiiZAoDtvvg
        KLit1+tlZ5hBA8RiMUNchRQMBh8eHp6fn5+enr4fAFMYYAY5B6GuiWuEmekz8R60CoVCs9ksl8vfjgID
        zDCGGcF1EHJVmPxldnZ2dnV1VavVisXilw2+HoDMYoYxSxykpbaCnDw702doiV4+n/+8Ay4Baohg0WBc
        qVRYyPtwFuzp9/vNaEIwmUzmcjlez0mAHAuhRXJZwD6dToe4c4BMISvIKbpGmYkxe1IijEAgcHd3l81m
        P/0L6I9MsVCuqGM8Hi+Xy+Fw+PLygsCdmV2v12gEkJ7P58wqzfX1tb4D5CKRiAFBzqZWKdxuoGtE3tez
        EGbcTYHKN5vNqALoeTH9fh8SzMJMvSROxKZUKikNtPRNkImkwTSUec42kMlkJJsUptMplUUNuT1uSyQS
        MNPNYMYz1TX7ssmM52IPl5eXMKMIKciRFk21WoXZ7x3IJ8xeX19FMRqNdHuRKRdmNElPrmUDktfsooDP
        CKiuWa1W+ANmKoUZEmKiKRr8qtuLbOYmQeW5qcp7ksBC+eopkHE4A1+KZjAY4B4EmOlmMKNO6RqLnE6n
        zarBJTjDBuRx6JsSCDLu7e1tMpksFgtYclUbzMg284sub2Xfpcc1LGEhhccCuOJIXhuJJR6V/kU3IxnZ
        fH+taHgkJjP+WEy8LXn736EsOeRpIWQjDiyhDm+/TvQaQm6/mh/SiDF9i+OQ4rrtNWAmXddJwCX0Tg4C
        Nvf393wztr2G6hzF85Cjgh+BdKGO00qlUjRfMIOPNGbbnlbGOICwSssqHfW7DURGKRUfB59UXI4YUx2I
        3ePjI7QgJzTkd9s5Ck3R4jko8ivZB6T0kS+sp/n+6RzYEFrsrBPgdI77A53GeUnqfmkCAAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="ignoreEarlyHighlights.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADMAAAAVCAIAAABkNkFWAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADZmlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw
        ZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1w
        TU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjAyODAxMTc0MDcyMDY4MTE5MkIwRTQwNzVDQTk5
        MzIxIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjUwQkZFRTk1QjFBMTExRTFCRUFGQzM3QTMyNEM5
        Q0Y3IiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjUwQkZFRTk0QjFBMTExRTFCRUFGQzM3QTMyNEM5
        Q0Y3IiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUgTWFjaW50b3NoIj4gPHhtcE1N
        OkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6MDE4MDExNzQwNzIwNjgxMTg4QzZG
        NTBGMjRDOUVCMEIiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6MDI4MDExNzQwNzIwNjgxMTkyQjBF
        NDA3NUNBOTkzMjEiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/
        eHBhY2tldCBlbmQ9InIiPz61aDcsAAADHklEQVRIS62Wv24aQRDG7zkSwn+MARNkwEa2iSxDMAkBoigY
        JAQFQkaioojEC9AaUVJDatPimpqHyu8Y2KyOQMTpvgJmZ2d3v53ZmRvj4w7xeBzx/Pzc4/Hc3NzU6/Vu
        t/trAwSGKJlyuVzvnYPb7fb5fOFwmNMvLi4ggCCyocYIoVAoGo222+1er9dqtRqNxo8NEBiiZAoDtvvg
        KLit1+tlZ5hBA8RiMUNchRQMBh8eHp6fn5+enr4fAFMYYAY5B6GuiWuEmekz8R60CoVCs9ksl8vfjgID
        zDCGGcF1EHJVmPxldnZ2dnV1VavVisXilw2+HoDMYoYxSxykpbaCnDw702doiV4+n/+8Ay4Baohg0WBc
        qVRYyPtwFuzp9/vNaEIwmUzmcjlez0mAHAuhRXJZwD6dToe4c4BMISvIKbpGmYkxe1IijEAgcHd3l81m
        P/0L6I9MsVCuqGM8Hi+Xy+Fw+PLygsCdmV2v12gEkJ7P58wqzfX1tb4D5CKRiAFBzqZWKdxuoGtE3tez
        EGbcTYHKN5vNqALoeTH9fh8SzMJMvSROxKZUKikNtPRNkImkwTSUec42kMlkJJsUptMplUUNuT1uSyQS
        MNPNYMYz1TX7ssmM52IPl5eXMKMIKciRFk21WoXZ7x3IJ8xeX19FMRqNdHuRKRdmNElPrmUDktfsooDP
        CKiuWa1W+ANmKoUZEmKiKRr8qtuLbOYmQeW5qcp7ksBC+eopkHE4A1+KZjAY4B4EmOlmMKNO6RqLnE6n
        zarBJTjDBuRx6JsSCDLu7e1tMpksFgtYclUbzMg284sub2Xfpcc1LGEhhccCuOJIXhuJJR6V/kU3IxnZ
        fH+taHgkJjP+WEy8LXn736EsOeRpIWQjDiyhDm+/TvQaQm6/mh/SiDF9i+OQ4rrtNWAmXddJwCX0Tg4C
        Nvf393wztr2G6hzF85Cjgh+BdKGO00qlUjRfMIOPNGbbnlbGOICwSssqHfW7DURGKRUfB59UXI4YUx2I
        3ePjI7QgJzTkd9s5Ck3R4jko8ivZB6T0kS+sp/n+6RzYEFrsrBPgdI77A53GeUnqfmkCAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>